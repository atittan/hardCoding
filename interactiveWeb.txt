It's more about javscript and Jquery.

@ script element 가 존재한다

css 의 <link href="style.css" rel="stylesheet">
처럼

<script src="jquery.min.js"></script> 를 통해 inlcude

@ 드롭다운 메뉴

var main = function() {                     // Jquery는 css의 selector와 같은 형식으로 html element를 지정하여 동작한다.
  $('.dropdown-toggle').click(function() {  // if문과같다 click이 되엇다면 {} 를 실행
    $('.dropdown-menu').toggle();           
  });
}

$(document).ready(main);


--- 난 이게편해

var main = function() {
  $('.dropdown-toggle').click( 
  	function(){
	  	$('.dropdown-menu').toggle();
	  }
  );
}

$(document).ready(main);

---



@ $(document).ready(main) 

  HTML 문서가 모두 로드될떄까지 기다렷다가 파라미터로 가지는 main 함수를 실행
  로드 전에 실행한다면 그ㅡ html요소가 없을수도있다.
//waits for the HTML document to load completely before running the main() function

@ jQuery enables us to do three main things on a web page:

Events. Respond to user interactions.
DOM Manipulation. Modify HTML elements on the page.
Effects. Add animations.


@ animate 를 통해 우측으로 이동
  X 클릭시 다시 모두 좌측으로 이동

var main = function(){
        $('.icon-menu').click(
                function(){
                        $('.menu').animate(
                            {left: '0px'}, 200
                        );
                        // alert('test');
                        $('body').animate(
                            {left: '285px'}, 200  
                        );
                    }
        );
        $('.icon-close').click(
                function(){
                        $('.menu').animate(
                            {left: '-285px'}, 200  
                        );
                        
                        $('body').animate(
                            {left: '0px'}, 200  
                        );
                        
                    }  
            
        );
        
    };
    
    
$(document).ready(main);
    

@ 그 selector 를 다시 쓰기 위해서는

$('.social li').click(function() {
  $(this).toggleClass('active');
});



@ keypress 시 이벤트 발생

$(document).keypress(function() {
  $('.dropdown-menu').toggle();
});

@ event object
이벤트에 대한정보를 params로 받아 비교후 그것을 조건으로삼는다.

$(document).keypress(function(event) {
  if(event.which === 109) {
    $('.dropdown-menu').toggle();
  }
});



@ article선택 및 하위 descriptor 열고 닫기

var main = function(){
        $('.article').click(
            function(){
                        $('.article').removeClass('current');
                        $('.description').hide();
                        $(this).addClass('current');
                        $(this).children('.description').show();
                }
        );
        
        $(document).keypress(
                function(event){
                        if(event.which === 111){
                                $('.current').children('.description').toggle();
                                // alert('pop');
                        }else if(event.which === 110){
                                var currentArticle = $('.current');
                                var nextArticle = currentArticle.next();
                                currentArticle.removeClass('current');
                                nextArticle.addClass('current');
                        }
                        
                }
        
        );
    }
    
$(document).ready(main);

@ jQuery 에서 $()의 두가지 기능

$() -> selector의 역할
$(<html 요소>)  없으면 새로 생성한다.

@ .text() method adds text to an HTML element.
	요소내 모든 텍스트를 가져오므로 인풋으로 쓰일수는 없다

$('<p>').text('List')
	새 p 를 만들고 'List' 라는 텍스트를 작성. 원래 있는거면 대체
	
	
$('h1').text()
	h1 요소의 text를 get 한다.

@@ .val() 역시 동일. 하지만 매치된 첫번째 요소의 텍스트만 가져온다 input으로 쓰일때는 무조건 val 
	
@ .appendTo() method
	adds HTML elements to the end of the selected element.
	
$('.btn').click(function() {
  $('<li>').text('New item').appendTo('.items');
});

@ .prependTo();

$('.btn').click(function() {
  $('<li>').text('New item').prependTo('.items');
});  

@ .remove();

$('.btn').click(function() {
  $('.selected').remove();
});

@ Six jQuery Methods

.hide() hides the selected HTML element
.show() displays an element
.toggle() alternates hiding and showing an element
.addClass() adds a CSS class to an element
.removeClass() removes a class from an element
.toggleClass() alternates adding and removing a class from an element

@ Document Object Model

	@ .next() method gets the next sibling of the selected element.
	@ .prev() method gets the previous sibling of the selected element.
	@ .children() method gets the children of the selected element.
		children(); - all the children	children('.pupdate'); - .pupdate class를 가진 특정 child
		
	
	






