@html 

HyperText Markup Language


@CSS

Cascading Style Sheets

	<head>
		<link type="text/css" rel="stylesheet" href="stylesheet.css"/>
		<title></title>
	</head>

@tags
< >


@ 예제(정렬을 위한 p 태그)
<!DOCTYPE html>
<html>

	<head>
		<title>
			Headings & Paragraphs
		</title>
		
	</head>
	<body>
	    <h1>Heading tag</h1>
	    <p>paragraph tag</p>
		<p>paragraph tag2</p>
		
		
		
	</body>
</html>



@ heading tag 의 종류

<h1> - The CEO
<h2> - VP
<h3> - Director
<h4> - Middle management
<h5> - Lowly assistant
<h6> - Gets coffee for everyone


@하이퍼 링크
<a href="naver.com">클릭하세요</a>

@이미지 삽입
<img src="http://s3.amazonaws.com/codecademy-blog/assets/f3a16fb6.jpg" />

@이미지를 링크로 nested
<a href="http://www.codecademy.com/">
    <img src="http://s3.amazonaws.com/codecademy-blog/assets/f3a16fb6.jpg"/>
</a>

@ ordered list tag <ol> 와 각 리스트 <li>

<ol>
			<li>Raindrops on roses</li>
			<li>Whiskers on kittens</li>
			<li>Bright copper kettles</li>
			<li>Warm woolen mittens</li>
		</ol>
		
@ unordered list (bullet point)
<ul>
  <li></li>
</ul>

@ inline CSS 
한줄로 css의 style을 작성

@색상과 사이즈
<h2 style="color: green; font-size:12px">

@폰트
<h1 style="font-family: Arial">Title</h1>

@배경색
<p style="background-color: red;">Hello!</p>

@정렬
<h1 style="text-align:center">

@ Bold
<strong></strong>

@ italic 
<em></em>

@ table의 head와 body
<table>
	<thead><tr>
	            <th></th>  <!--여기서는 td가 아닌 th table header 를 사용-->
	       </tr></thead>
	<tbody></tbody>
</table>


@ colpan 사용
  열을 병합한다. theader에 사용
  
  <table border="1px">
            <thead>
                <tr>
                    <th colspan="2">Famous Monsters by Birth Year</th>
                </tr>
                <tr>
                    <th>Famous Monster</th>
                    <th>Birth Year</th>
                </tr>
            </thead>
            
            




@ span

span을 사용하면 부분적으로 style 적용 가능

<p>This text is black, except for the word <span style="color:red">red</span>!</p>

@ a tag도 꾸밀수 있다.

a{
        text-decoration: none;  // 밑줄없앰
        color: #cc0000;
    }
    
@ 드디어 division !!

<div style="width:50px; height:50px; background-color:yellow"></div>
    
div{
        height: 50px;
        width: 120px;
        border-style: solid;
        border-color: #6495ED;
        border-width: 2px;
        border-radius: 5px;
        background-color:#BCD2EE;
        margin: auto;			/* 각 요소의 마진을 오토로-> 정중앙
        text-align: center;
    }
    //border: 1px dashed #3A5FCD; 로 한꺼번에 써도됫엇는데


@ 모든 html 태그는 Selectors 이다. 
심지어 <html> 까지도!

@ nested selector

div div p {
    /*CSS stuff!*/
}


@ Universal selector

* {
    border: 2px solid black;
}

@html 의 트리구조 Cascade

<!DOCTYPE html>
<html> <!--The trunk of the tree!-->
	<head> <!--Child of html, parent of title,
		   sibling of body-->
		<title></title> <!--Immediate child of head,
						child of head AND html-->
	</head>
	<body> <!--Child of html, parent of p,
		   sibling of head-->
		<p></p> <!--Immediate child of body,
				child of body AND html-->
	</body>
</html>

@ 하위 태그는 모든 상위태그와 단순 parent-child 관계를 가진다.
하지만 imediate child 인경우 그 바로 1단계하위 태그만 선택하기위해

div > p { /* Some CSS */ }

를 사용

@ Cascade에서 더 특정된 태그일수록 그게 이전것을 override한다.

p {
	font-family: Garamond, serif;  /*가장 바깥범위 
}

#intro {
	font-weight: bold;   /* CSS id
	color: #000000;
}

div p {
	color: #7AC5CD;
}

li p {			/* li안에 있는 특정 p를 override 한다. 
	font-family: Verdana, sans-serif;
	color: #0000FF;
}

.list_item {			/* 그중에서도 list_item 이라는 class 를 사용한 것을 더 override한다. 
	font-family: Vivaldi, cursive;
	color: #FF00FF;
}

#summary {
	font-size: 20px;
	color: #000000;
}


@Class

can simply apply the same class to all those HTML elements

<div class="square"></div>
<img class="square"/>
<td class="square"></td>

Classes are identified in CSS with a dot (.), like so:
.square {
    height: 100px;
    width: 100px;
}

@ID

<div id="first"></div>
<div id="second"></div>
<p id="intro"></p>

IDs are identified in CSS with a pound sign (#):

#first {
    height: 50px;
}

#second {
    height: 100px;
}

#intro {
    color: #FF0000;
}

@ Pseudo-class_selector

selector:pseudo-class_selector {
    property: value;
}

예제



a:hover {
	color: #cc0000;
	font-weight: bold;
	text-decoration: none;
}

마우스 오버할때마다 하이퍼링크의 폰트스타일이가 변화

@Pseudo-class of Link

a:link: An unvisited link.
a:visited: A visited link.
a:hover: A link you're hovering your mouse over.

@ 수많은 리스트중 first-child 만 변화시키는 Pseudo-class

p:first-child {
    color: red;
}

@ 태그들중 n번째

p:nth-child(2) {
    color: red;
}
주의사항 : 하지만 n은 p만 아니라 모든 child 를 포함하는 개수이다.

@ id는 class와 중첩시켜사용할 수 있다.


@ display property

block: This makes the element a block box. It won't let anything sit next to it on the page! It takes up the full width.

inline-block: This makes the element a block box, but will allow other elements to sit next to it on the same line.

inline: This makes the element sit on the same line as another element, but without formatting it like a block. It only takes up as much width as it needs (not the whole line).

none: This makes the element and its content disappear from the page entirely!

@block

기본적으로 div는 block이다.

@ Inline-block

display: inline-block;
한줄에 나란히 블럭형태로 붙을수 있게함

@Inline

블럭의 형태가 아니라 하나로 겹쳐짐
텍스트를 입력해야 나눠지고, dimension(box)의 개념이 사라짐

@The Box Model
https://s3.amazonaws.com/codecademy-blog/assets/ae09140c.png

TM: margin-top
RP: padding-right

@ margin
margin: auto
margin-top: /*some value*/
margin-right: /*some value*/
margin-bottom: /*some value*/
margin-left: /*some-value*/
margin: 1px 2px 3px 4px; /* top, right, bottom, left*/
margin: 10px; 4방향 모두 10px으로 설정

@padding
margin과 동일
1.
padding-top: /*some value*/
padding-right: /*some value*/
padding-bottom: /*some value*/
padding-left: /*some-value*/
2. padding: value value value value;

@ Negative values

margin-left: -20px 하면 왼쪽으로 이동한다.


@float
 html 요소들은 바다위에 떠다니는 배와 같다.
 겹치지않게 알아서 잘 배치해주는게 float

@clear

float가 아닌 요소가 다른 float한 요소와 겹치지 않기위하여

element {
    clear: /*right, left, or both*/
}

left 인 경우 좌측에있는 요소 밑에 가서 붙는다. 


@ static

float가 없을경우 기본값, 그냥 가서 붙는다.

@ position: absolute;

position: static(default)가 아닌 parent를 찾아 그를 따른다.
하나도 없다면 <html>을 따른다.

@position: relative;

static 이었으면 갓을법한 곳으로 알아서 가라 라고?

@position: fixed;

마우스 스크롤을 내려도 창에 고정되어 계속 보임

@어렵지만 요약정리
기본은 position: static;
다른것들을 무시하려면 absolute;
인식시키려면 relative;

관련 사이트
https://css-tricks.com/absolute-positioning-inside-relative-positioning/

http://mytory.net/archives/10997/

@ z-index

ㅋㅋ 장난치냐 z 인덱스 잘만되구만
position이 static이 아닌경우만 z-index가 적용된다. 
값이 높을수록 우선순위가 커진다. 















		
		
		


